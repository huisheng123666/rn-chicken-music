import React, {Component} from 'react';import { View, StyleSheet, Image, ScrollView, TouchableWithoutFeedback } from 'react-native'import { BannerWrap, Title, RecommendItem, RecommendItemName, RecommendItemContent } from './style'import Swiper from 'react-native-swiper'import {utilWidth} from "../../common/js/util";import { flyGet } from '../../common/js/fetch'export default class Home extends Component {  constructor (props) {    super(props)    this.state = {      slider: [],      recommend: []    }  }  async componentDidMount () {    let response = await flyGet('https://c.y.qq.com/musichall/fcgi-bin/fcg_yqqhomepagerecommend.fcg')    response = JSON.parse(response.data)    if (response.code === 0) {      this.setState({        slider: response.data.slider,        recommend: response.data.songList      })    }  }  render() {    const { navigation } = this.props    return (      <ScrollView style={{flex: 1, backgroundColor: '#222'}}>        <BannerWrap>          {this.state.slider.length ? <Swiper            style={styles.swiper}            height={utilWidth(300)}            horizontal={true}            paginationStyle={{bottom: 10}}            showsButtons={false}>            {this.state.slider.map(item => {              return <TouchableWithoutFeedback onPress={() => {navigation.navigate('BannerDetail', {uri: item.linkUrl})}} key={item.id}>                <Image style={{height: '100%', width: '100%'}} source={{uri: item.picUrl}} />              </TouchableWithoutFeedback>            })}          </Swiper> : null}        </BannerWrap>        <Title>热门歌单推荐</Title>        {this.state.recommend.map(item => {          return (            <TouchableWithoutFeedback key={item.id} onPress={() => {              navigation.navigate('SongList', {id: item.id, type: 'songList'})            }}>              <RecommendItem>                <Image style={{width: utilWidth(140), height: utilWidth(160), marginRight: utilWidth(40)}} source={{uri: item.picUrl}} />                <View>                  <RecommendItemName>{item.songListAuthor}</RecommendItemName>                  <RecommendItemContent>{item.songListDesc}</RecommendItemContent>                </View>              </RecommendItem>            </TouchableWithoutFeedback>          )        })}      </ScrollView>    );  }}const styles = StyleSheet.create({  swiper: {    width: '100%'  }});